---
import Layout from '../../layouts/Layout.astro';
import { Aside } from '../../components/aside.tsx';
import blogData from '../../data/blog.json';

export async function getStaticPaths() {
  return blogData.posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

interface Post {
  id: number;
  slug: string;
  title: string;
  excerpt: string;
  content: string;
  category: string;
  author: string;
  authorRole: string;
  publishedAt: string;
  readTime: string;
  image: string;
  featured: boolean;
  tags: string[];
}

interface Category {
  id: string;
  name: string;
  description: string;
  color: string;
}

const { post } = Astro.props as { post: Post };
const categories: Category[] = blogData.categories;

// Obtener información de la categoría
const getCategoryInfo = (categoryId: string) => {
  return categories.find(cat => cat.id === categoryId);
};

// Formatear fecha
const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('es-ES', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// Obtener artículos relacionados (misma categoría, excluyendo el actual)
let relatedPosts = blogData.posts
  .filter(p => p.category === post.category && p.id !== post.id)
  .slice(0, 3);

// Si no hay suficientes artículos relacionados, agregar artículos de otras categorías
if (relatedPosts.length < 3) {
  const otherPosts = blogData.posts
    .filter(p => p.category !== post.category && p.id !== post.id)
    .slice(0, 3 - relatedPosts.length);
  relatedPosts = [...relatedPosts, ...otherPosts];
}

// Meta tags dinámicos para SEO
const title = `${post.title} | Blog IFCET`;
const description = post.excerpt;
const image = post.image;
const canonical = `https://ifcet.com.pe/blog/${post.slug}`;

// Datos estructurados para SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": post.title,
  "description": post.excerpt,
  "image": post.image ? `https://ifcet.com.pe${post.image}` : undefined,
  "author": {
    "@type": "Person",
    "name": post.author,
    "jobTitle": post.authorRole
  },
  "publisher": {
    "@type": "Organization",
    "name": "IFCET",
    "logo": {
      "@type": "ImageObject",
      "url": "https://ifcet.com.pe/favicon.webp"
    }
  },
  "datePublished": post.publishedAt,
  "dateModified": post.publishedAt,
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": canonical
  },
  "keywords": post.tags.join(", ")
};
---

<Layout {title} {description} {image} {canonical}>
  <!-- Datos estructurados JSON-LD -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>

  <div class="w-full pt-[110px] md:pt-[110px]">
    <!-- Header del artículo -->
    <div class="bg-white shadow-sm border-b">
      <div class="max-w-4xl mx-auto px-4 py-6">
        <a
          href="/blog"
          class="flex items-center text-blue-600 hover:text-blue-800 mb-4 transition-colors"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M15 19l-7-7 7-7" />
          </svg>
          Volver al blog
        </a>
        
        <!-- Breadcrumbs -->
        <nav class="flex items-center space-x-2 text-sm text-gray-600 mb-4">
          <a href="/" class="hover:text-blue-600">Inicio</a>
          <span>/</span>
          <a href="/blog" class="hover:text-blue-600">Blog</a>
          <span>/</span>
          <span class="text-gray-900">{getCategoryInfo(post.category)?.name}</span>
        </nav>
        
        <div class="flex items-center space-x-4 text-sm text-gray-600 mb-4">
          <span class={`px-3 py-1 rounded-full text-white text-xs font-medium ${getCategoryInfo(post.category)?.color}`}>
            {getCategoryInfo(post.category)?.name}
          </span>
          <span>{formatDate(post.publishedAt)}</span>
          <span>{post.readTime}</span>
        </div>

        <h1 class="text-4xl font-bold text-gray-900 mb-4">{post.title}</h1>
        <p class="text-xl text-gray-600 mb-6">{post.excerpt}</p>

        <div class="flex items-center space-x-4">
          <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold text-lg">
            {post.author.split(' ').map(n => n[0]).join('')}
          </div>
          <div>
            <p class="font-semibold text-gray-900">{post.author}</p>
            <p class="text-sm text-gray-600">{post.authorRole}</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Layout con Asides para el artículo completo -->
    <div class="grid grid-cols-1 lg:grid-cols-[1fr_4fr_1fr] min-h-screen max-w-full overflow-x-hidden gap-4">
      <!-- Aside Izquierdo -->
      <aside class="col-span-1 hidden lg:block">
        <Aside client:load />
      </aside>

      <!-- Contenido Principal del Artículo -->
      <main class="col-span-1 lg:col-span-1 w-full overflow-hidden">
        <!-- Contenido del artículo -->
        <div class="bg-white rounded-lg shadow-sm p-8 mx-4 my-8">
          {post.image && (
            <div class="mb-6">
              <img
                src={post.image}
                alt={post.title}
                class="w-full max-h-[520px] object-cover rounded-lg"
                loading="lazy"
              />
            </div>
          )}
          <div class="prose prose-lg max-w-none">
            {post.content.split('\n\n').map((paragraph, index) => {
              if (paragraph.startsWith('## ')) {
                return (
                  <h2 key={index} class="text-2xl font-bold text-gray-900 mt-8 mb-4">
                    {paragraph.replace('## ', '')}
                  </h2>
                );
              } else if (paragraph.startsWith('### ')) {
                return (
                  <h3 key={index} class="text-xl font-semibold text-gray-800 mt-6 mb-3">
                    {paragraph.replace('### ', '')}
                  </h3>
                );
              } else if (paragraph.startsWith('- ')) {
                return (
                  <ul key={index} class="list-disc list-inside space-y-2 my-4">
                    {paragraph.split('\n').filter(item => item.startsWith('- ')).map((item, i) => (
                      <li key={i} class="text-gray-700">{item.replace('- ', '')}</li>
                    ))}
                  </ul>
                );
              } else if (paragraph.startsWith('**') && paragraph.includes('**')) {
                return (
                  <p key={index} class="font-semibold text-gray-900 my-4">
                    {paragraph.replace(/\*\*/g, '')}
                  </p>
                );
              } else if (paragraph.trim()) {
                return (
                  <p key={index} class="text-gray-700 leading-relaxed my-4">
                    {paragraph}
                  </p>
                );
              }
              return null;
            })}
          </div>

          <!-- Tags -->
          <div class="mt-8 pt-6 border-t border-gray-200">
            <div class="flex flex-wrap gap-2">
              {post.tags.map((tag, index) => (
                <span
                  key={index}
                  class="px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-full"
                >
                  #{tag}
                </span>
              ))}
            </div>
          </div>

          <!-- Compartir y Navegación Social -->
          <div class="mt-8 pt-6 border-t border-gray-200">
            <div class="flex items-center justify-between">
              <div class="flex items-center space-x-4">
                <span class="text-sm text-gray-600">Compartir:</span>
                <a 
                  href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(canonical)}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white hover:bg-blue-700 transition-colors"
                >
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                  </svg>
                </a>
                <a 
                  href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(post.title)}&url=${encodeURIComponent(canonical)}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="w-8 h-8 bg-blue-400 rounded-full flex items-center justify-center text-white hover:bg-blue-500 transition-colors"
                >
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                  </svg>
                </a>
                <a 
                  href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(canonical)}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="w-8 h-8 bg-blue-700 rounded-full flex items-center justify-center text-white hover:bg-blue-800 transition-colors"
                >
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                  </svg>
                </a>
              </div>
              <div class="flex items-center space-x-2">
                <span class="text-sm text-gray-600">Autor:</span>
                <div class="flex items-center space-x-2">
                  <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                    <span class="text-white font-bold text-xs">
                      {post.author.split(' ').map(n => n[0]).join('')}
                    </span>
                  </div>
                  <span class="text-sm font-medium text-gray-900">{post.author}</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Artículos Relacionados -->
        {relatedPosts.length > 0 && (
          <section class="mx-4 mb-8">
            <div class="bg-white rounded-lg shadow-sm p-6">
              <h2 class="text-2xl font-bold text-gray-900 mb-6">Artículos Relacionados</h2>
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {relatedPosts.map((relatedPost) => (
                  <article
                    key={relatedPost.id}
                    class="bg-gray-50 rounded-lg p-4 hover:bg-gray-100 transition-colors group"
                  >
                    <a href={`/blog/${relatedPost.slug}`} class="block">
                      {relatedPost.image && (
                        <div class="w-full h-36 mb-3 overflow-hidden rounded-md">
                          <img
                            src={relatedPost.image}
                            alt={relatedPost.title}
                            class="w-full h-full object-cover"
                            loading="lazy"
                          />
                        </div>
                      )}
                      <div class="flex items-center space-x-2 mb-3">
                        <span class={`px-2 py-1 rounded-full text-white text-xs font-medium ${getCategoryInfo(relatedPost.category)?.color}`}>
                          {getCategoryInfo(relatedPost.category)?.name}
                        </span>
                        <span class="text-xs text-gray-500">{relatedPost.readTime}</span>
                      </div>

                      <h3 class="font-semibold text-gray-900 mb-2 group-hover:text-blue-600 transition-colors line-clamp-2">
                        {relatedPost.title}
                      </h3>

                      <p class="text-gray-600 text-sm mb-3 line-clamp-2">
                        {relatedPost.excerpt}
                      </p>

                      <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-2">
                          <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                            <span class="text-white font-bold text-xs">
                              {relatedPost.author.split(' ').map(n => n[0]).join('')}
                            </span>
                          </div>
                          <span class="text-xs text-gray-600">{relatedPost.author}</span>
                        </div>
                        <span class="text-xs text-gray-500">{formatDate(relatedPost.publishedAt)}</span>
                      </div>
                    </a>
                  </article>
                ))}
              </div>
            </div>
          </section>
        )}
      </main>

      <!-- Aside Derecho -->
      <aside class="col-span-1 hidden lg:block">
        <Aside client:load />
      </aside>
    </div>
  </div>
</Layout>
